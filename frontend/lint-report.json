[{"filePath":"/Users/shayacoca/PROCARDS/frontend/postcss.config.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/Users/shayacoca/PROCARDS/frontend/src/App.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/Users/shayacoca/PROCARDS/frontend/src/components/layout/Footer.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/Users/shayacoca/PROCARDS/frontend/src/components/layout/Navbar.tsx","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":116,"column":27,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":116,"endColumn":30,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[3854,3857],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[3854,3857],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":183,"column":35,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":183,"endColumn":38,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[6939,6942],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[6939,6942],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":188,"column":35,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":188,"endColumn":38,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[7265,7268],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[7265,7268],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":340,"column":31,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":340,"endColumn":34,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[13863,13866],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[13863,13866],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\nimport { \n  Menu, \n  X, \n  User, \n  LogOut, \n  Plus, \n  CreditCard, \n  Settings,\n  Moon,\n  Sun,\n  Monitor\n} from 'lucide-react';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { useTheme } from '@/contexts/ThemeContext';\nimport { cn, formatFullName, getAvatarUrl } from '@/lib/utils';\nimport Button from '@/components/ui/Button';\n\nexport default function Navbar() {\n  const { user, logout } = useAuth();\n  const { theme, setTheme } = useTheme();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const [isUserMenuOpen, setIsUserMenuOpen] = useState(false);\n\n  const isActive = (path: string) => location.pathname === path;\n\n  const handleLogout = () => {\n    logout();\n    navigate('/');\n    setIsUserMenuOpen(false);\n    setIsMobileMenuOpen(false);\n  };\n\n  const closeMobileMenu = () => {\n    setIsMobileMenuOpen(false);\n  };\n\n  const themeIcons = {\n    light: Sun,\n    dark: Moon,\n    system: Monitor,\n  };\n\n  const ThemeIcon = themeIcons[theme];\n\n  const cycleTheme = () => {\n    const themes: Array<typeof theme> = ['light', 'dark', 'system'];\n    const currentIndex = themes.indexOf(theme);\n    const nextIndex = (currentIndex + 1) % themes.length;\n    setTheme(themes[nextIndex]);\n  };\n\n  return (\n    <nav className=\"sticky top-0 z-50 bg-white/80 dark:bg-dark-50/80 backdrop-blur-md border-b border-gray-200/50 dark:border-dark-300/50\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex justify-between items-center h-16\">\n          {/* Logo */}\n          <motion.div\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n          >\n            <Link to=\"/\" className=\"flex items-center space-x-2\">\n              <div className=\"w-8 h-8 bg-gradient-to-r from-primary-500 to-purple-600 rounded-lg flex items-center justify-center\">\n                <CreditCard className=\"w-5 h-5 text-white\" />\n              </div>\n              <span className=\"text-xl font-bold bg-gradient-to-r from-primary-600 to-purple-600 bg-clip-text text-transparent\">\n                Cardify\n              </span>\n            </Link>\n          </motion.div>\n\n          {/* Desktop Navigation */}\n          <div className=\"hidden md:flex items-center space-x-8\">\n            <Link\n              to=\"/\"\n              className={cn(\n                'text-sm font-medium transition-colors duration-200 hover:text-primary-600 dark:hover:text-primary-400',\n                isActive('/') \n                  ? 'text-primary-600 dark:text-primary-400' \n                  : 'text-gray-600 dark:text-gray-300'\n              )}\n            >\n              Accueil\n            </Link>\n            \n            <Link\n              to=\"/cards\"\n              className={cn(\n                'text-sm font-medium transition-colors duration-200 hover:text-primary-600 dark:hover:text-primary-400',\n                isActive('/cards') \n                  ? 'text-primary-600 dark:text-primary-400' \n                  : 'text-gray-600 dark:text-gray-300'\n              )}\n            >\n              Découvrir\n            </Link>\n\n            {user && (\n              <>\n                <Link\n                  to=\"/my-cards\"\n                  className={cn(\n                    'text-sm font-medium transition-colors duration-200 hover:text-primary-600 dark:hover:text-primary-400',\n                    isActive('/my-cards') \n                      ? 'text-primary-600 dark:text-primary-400' \n                      : 'text-gray-600 dark:text-gray-300'\n                  )}\n                >\n                  Mes Cartes\n                </Link>\n\n                {(user as any).isBusiness && (\n                  <Link\n                    to=\"/create-card\"\n                    className={cn(\n                      'text-sm font-medium transition-colors duration-200 hover:text-primary-600 dark:hover:text-primary-400',\n                      isActive('/create-card') \n                        ? 'text-primary-600 dark:text-primary-400' \n                        : 'text-gray-600 dark:text-gray-300'\n                    )}\n                  >\n                    Créer\n                  </Link>\n                )}\n              </>\n            )}\n          </div>\n\n          {/* Right Section */}\n          <div className=\"hidden md:flex items-center space-x-4\">\n            {/* Theme Toggle */}\n            <motion.button\n              whileHover={{ scale: 1.05 }}\n              whileTap={{ scale: 0.95 }}\n              onClick={cycleTheme}\n              className=\"p-2 rounded-lg text-gray-600 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-dark-200 transition-colors\"\n              title={`Thème: ${theme}`}\n              aria-label={`Changer le thème (actuellement ${theme})`}\n            >\n              <ThemeIcon size={20} />\n            </motion.button>\n\n            {user ? (\n              <div className=\"relative\">\n                <motion.button\n                  whileHover={{ scale: 1.05 }}\n                  whileTap={{ scale: 0.95 }}\n                  onClick={() => setIsUserMenuOpen(!isUserMenuOpen)}\n                  className=\"flex items-center space-x-2 p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-dark-200 transition-colors\"\n                  title=\"Menu utilisateur\"\n                  aria-label={`Menu utilisateur pour ${formatFullName(user.name)}`}\n                  aria-expanded={isUserMenuOpen}\n                >\n                  <img\n                    src={user.image?.url || getAvatarUrl(user.name)}\n                    alt={formatFullName(user.name)}\n                    className=\"w-8 h-8 rounded-full object-cover\"\n                  />\n                  <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\n                    {user.name.first}\n                  </span>\n                </motion.button>\n\n                <AnimatePresence>\n                  {isUserMenuOpen && (\n                    <motion.div\n                      initial={{ opacity: 0, y: -10 }}\n                      animate={{ opacity: 1, y: 0 }}\n                      exit={{ opacity: 0, y: -10 }}\n                      className=\"absolute right-0 mt-2 w-48 bg-white dark:bg-dark-100 rounded-xl shadow-lg border border-gray-200 dark:border-dark-300 py-2\"\n                    >\n                      <div className=\"px-4 py-2 border-b border-gray-200 dark:border-dark-300\">\n                        <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                          {formatFullName(user.name)}\n                        </p>\n                        <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                          {user.email}\n                        </p>\n                        {(user as any).isBusiness && (\n                          <span className=\"inline-block px-2 py-0.5 mt-1 text-xs bg-primary-100 dark:bg-primary-900/30 text-primary-700 dark:text-primary-300 rounded-full\">\n                            Business\n                          </span>\n                        )}\n                        {(user as any).role === 'admin' && (\n                          <span className=\"inline-block px-2 py-0.5 mt-1 ml-1 text-xs bg-purple-100 dark:bg-purple-900/30 text-purple-700 dark:text-purple-300 rounded-full\">\n                            Admin\n                          </span>\n                        )}\n                      </div>\n                      \n                      <Link\n                        to=\"/profile\"\n                        className=\"flex items-center space-x-2 px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-dark-200\"\n                        onClick={() => setIsUserMenuOpen(false)}\n                      >\n                        <User size={16} />\n                        <span>Mon Profil</span>\n                      </Link>\n                      \n                      <Link\n                        to=\"/settings\"\n                        className=\"flex items-center space-x-2 px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-dark-200\"\n                        onClick={() => setIsUserMenuOpen(false)}\n                      >\n                        <Settings size={16} />\n                        <span>Paramètres</span>\n                      </Link>\n                      \n                      <button\n                        onClick={handleLogout}\n                        className=\"flex items-center space-x-2 px-4 py-2 text-sm text-red-600 dark:text-red-400 hover:bg-red-50 dark:hover:bg-red-900/20 w-full text-left\"\n                      >\n                        <LogOut size={16} />\n                        <span>Déconnexion</span>\n                      </button>\n                    </motion.div>\n                  )}\n                </AnimatePresence>\n              </div>\n            ) : (\n              <div className=\"flex items-center space-x-3\">\n                <Link to=\"/login\">\n                  <Button variant=\"ghost\" size=\"sm\">\n                    Connexion\n                  </Button>\n                </Link>\n                <Link to=\"/register\">\n                  <Button size=\"sm\">\n                    S'inscrire\n                  </Button>\n                </Link>\n              </div>\n            )}\n          </div>\n\n          {/* Mobile Menu Button */}\n          <div className=\"md:hidden flex items-center space-x-2\">\n            {/* Theme Toggle Mobile */}\n            <motion.button\n              whileHover={{ scale: 1.05 }}\n              whileTap={{ scale: 0.95 }}\n              onClick={cycleTheme}\n              className=\"p-2 rounded-lg text-gray-600 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-dark-200 transition-colors\"\n              title={`Thème: ${theme}`}\n              aria-label={`Changer le thème (actuellement ${theme})`}\n            >\n              <ThemeIcon size={20} />\n            </motion.button>\n\n            <motion.button\n              whileHover={{ scale: 1.05 }}\n              whileTap={{ scale: 0.95 }}\n              onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n              className=\"p-2 rounded-lg text-gray-600 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-dark-200 transition-colors\"\n              title={isMobileMenuOpen ? 'Fermer le menu' : 'Ouvrir le menu'}\n              aria-label={isMobileMenuOpen ? 'Fermer le menu mobile' : 'Ouvrir le menu mobile'}\n            >\n              {isMobileMenuOpen ? <X size={24} /> : <Menu size={24} />}\n            </motion.button>\n          </div>\n        </div>\n      </div>\n\n      {/* Mobile Menu */}\n      <AnimatePresence>\n        {isMobileMenuOpen && (\n          <motion.div\n            initial={{ opacity: 0, height: 0 }}\n            animate={{ opacity: 1, height: 'auto' }}\n            exit={{ opacity: 0, height: 0 }}\n            className=\"md:hidden bg-white/95 dark:bg-dark-50/95 backdrop-blur-sm border-b border-gray-200 dark:border-dark-300\"\n          >\n            <div className=\"px-4 py-4 space-y-4\">\n              {/* User Info (Mobile) */}\n              {user && (\n                <div className=\"flex items-center space-x-3 p-3 bg-gray-50 dark:bg-dark-100 rounded-lg\">\n                  <img\n                    src={user.image?.url || getAvatarUrl(user.name)}\n                    alt={formatFullName(user.name)}\n                    className=\"w-10 h-10 rounded-full object-cover\"\n                  />\n                  <div>\n                    <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                      {formatFullName(user.name)}\n                    </p>\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                      {user.email}\n                    </p>\n                  </div>\n                </div>\n              )}\n\n              {/* Navigation Links */}\n              <div className=\"space-y-2\">\n                <Link\n                  to=\"/\"\n                  onClick={closeMobileMenu}\n                  className={cn(\n                    'block px-3 py-2 rounded-lg text-sm font-medium transition-colors',\n                    isActive('/') \n                      ? 'bg-primary-100 dark:bg-primary-900/30 text-primary-700 dark:text-primary-300'\n                      : 'text-gray-600 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-dark-200'\n                  )}\n                >\n                  Accueil\n                </Link>\n                \n                <Link\n                  to=\"/cards\"\n                  onClick={closeMobileMenu}\n                  className={cn(\n                    'block px-3 py-2 rounded-lg text-sm font-medium transition-colors',\n                    isActive('/cards') \n                      ? 'bg-primary-100 dark:bg-primary-900/30 text-primary-700 dark:text-primary-300'\n                      : 'text-gray-600 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-dark-200'\n                  )}\n                >\n                  Découvrir\n                </Link>\n\n                {user && (\n                  <>\n                    <Link\n                      to=\"/my-cards\"\n                      onClick={closeMobileMenu}\n                      className={cn(\n                        'block px-3 py-2 rounded-lg text-sm font-medium transition-colors',\n                        isActive('/my-cards') \n                          ? 'bg-primary-100 dark:bg-primary-900/30 text-primary-700 dark:text-primary-300'\n                          : 'text-gray-600 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-dark-200'\n                      )}\n                    >\n                      Mes Cartes\n                    </Link>\n\n                    {(user as any).isBusiness && (\n                      <Link\n                        to=\"/create-card\"\n                        onClick={closeMobileMenu}\n                        className={cn(\n                          'flex items-center space-x-2 px-3 py-2 rounded-lg text-sm font-medium transition-colors',\n                          isActive('/create-card') \n                            ? 'bg-primary-100 dark:bg-primary-900/30 text-primary-700 dark:text-primary-300'\n                            : 'text-gray-600 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-dark-200'\n                        )}\n                      >\n                        <Plus size={16} />\n                        <span>Créer une Carte</span>\n                      </Link>\n                    )}\n                  </>\n                )}\n              </div>\n\n              {/* Auth Buttons (Mobile) */}\n              {user ? (\n                <div className=\"pt-4 border-t border-gray-200 dark:border-dark-300\">\n                  <button\n                    onClick={handleLogout}\n                    className=\"flex items-center justify-center space-x-2 w-full px-4 py-2 text-sm font-medium text-red-600 dark:text-red-400 bg-red-50 dark:bg-red-900/20 rounded-lg hover:bg-red-100 dark:hover:bg-red-900/30 transition-colors\"\n                  >\n                    <LogOut size={16} />\n                    <span>Déconnexion</span>\n                  </button>\n                </div>\n              ) : (\n                <div className=\"flex space-x-3 pt-4 border-t border-gray-200 dark:border-dark-300\">\n                  <Link to=\"/login\" className=\"flex-1\" onClick={closeMobileMenu}>\n                    <Button variant=\"outline\" size=\"sm\" fullWidth>\n                      Connexion\n                    </Button>\n                  </Link>\n                  <Link to=\"/register\" className=\"flex-1\" onClick={closeMobileMenu}>\n                    <Button size=\"sm\" fullWidth>\n                      S'inscrire\n                    </Button>\n                  </Link>\n                </div>\n              )}\n            </div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n\n      {/* Click outside to close menus */}\n      {(isMobileMenuOpen || isUserMenuOpen) && (\n        <div\n          className=\"fixed inset-0 z-40\"\n          onClick={() => {\n            setIsMobileMenuOpen(false);\n            setIsUserMenuOpen(false);\n          }}\n        />\n      )}\n    </nav>\n  );\n}\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/Users/shayacoca/PROCARDS/frontend/src/components/ui/Button.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/Users/shayacoca/PROCARDS/frontend/src/components/ui/Card.tsx","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":44,"column":39,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":44,"endColumn":42,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1331,1334],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1331,1334],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { Heart, ExternalLink, Edit, Trash2, MapPin, Phone, Mail, Globe } from 'lucide-react';\nimport { cn, formatFullName, getCardGradient, truncateText } from '@/lib/utils';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { cardService } from '@/services/api';\nimport type { Card as CardType } from '@/types';\nimport Button from './Button';\n\ninterface CardProps {\n  card: CardType;\n  onLike?: () => void;\n  onEdit?: () => void;\n  onDelete?: () => void;\n  showActions?: boolean;\n  isOwner?: boolean;\n  variant?: 'vertical' | 'horizontal';\n  className?: string;\n}\n\nexport default function Card({\n  card,\n  onEdit,\n  onDelete,\n  onLike,\n  showActions = true,\n  isOwner: isOwnerProp = false,\n  className,\n}: CardProps) {\n  const { user } = useAuth();\n  const [isLiking, setIsLiking] = useState(false);\n  const [likesCount, setLikesCount] = useState(card.likes?.length || 0);\n  const [isLiked, setIsLiked] = useState(\n    user ? card.likes?.includes(user._id) : false\n  );\n\n  const isOwnerComputed = user && (\n    (typeof card.user_id === 'string' && card.user_id === user._id) ||\n    (typeof card.user_id === 'object' && card.user_id._id === user._id)\n  );\n  \n  const isOwner = isOwnerProp || isOwnerComputed;\n  \n  const canEdit = isOwner || (user as any)?.role === 'admin';\n\n  const handleLike = async () => {\n    if (!user || isLiking) return;\n\n    try {\n      setIsLiking(true);\n      const updatedCard = await cardService.toggleLike(card._id);\n      \n      setLikesCount(updatedCard.likes?.length || 0);\n      setIsLiked(updatedCard.likes?.includes(user._id) || false);\n      \n      if (onLike) {\n        onLike();\n      }\n    } catch (error) {\n      console.error('Erreur lors du like:', error);\n    } finally {\n      setIsLiking(false);\n    }\n  };\n\n  const handleEdit = () => {\n    if (onEdit) {\n      onEdit();\n    }\n  };\n\n  const handleDelete = () => {\n    if (onDelete && window.confirm('Êtes-vous sûr de vouloir supprimer cette carte ?')) {\n      onDelete();\n    }\n  };\n\n  const cardAuthor = typeof card.user_id === 'object' ? card.user_id : null;\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ \n        duration: 0.5,\n        delay: 0.1,\n        ease: \"easeOut\"\n      }}\n      whileHover={{ \n        y: -8,\n        transition: { duration: 0.3 }\n      }}\n      className={cn(\n        'group relative overflow-hidden rounded-2xl bg-white/80 dark:bg-dark-100/80 backdrop-blur-md border border-gray-200/50 dark:border-dark-300/50 shadow-lg hover:shadow-xl transition-all duration-300',\n        className\n      )}\n    >\n      {/* Gradient Background */}\n      <div className={cn(\n        'absolute inset-0 bg-gradient-to-br opacity-5 group-hover:opacity-10 transition-opacity duration-300',\n        getCardGradient(0)\n      )} />\n\n      {/* Card Header */}\n      <div className=\"relative p-6 pb-4\">\n        {/* Business Number Badge */}\n        <div className=\"absolute top-4 right-4\">\n          <div className=\"px-2 py-1 bg-primary-100 dark:bg-primary-900/30 text-primary-700 dark:text-primary-300 text-xs font-semibold rounded-full\">\n            #{card.bizNumber}\n          </div>\n        </div>\n\n        {/* Company Info */}\n        <div className=\"space-y-2\">\n          <h3 className=\"text-xl font-bold text-gray-900 dark:text-white group-hover:text-primary-600 dark:group-hover:text-primary-400 transition-colors duration-300\">\n            {card.title}\n          </h3>\n          \n          <p className=\"text-sm font-medium text-primary-600 dark:text-primary-400\">\n            {card.subtitle}\n          </p>\n          \n          <p className=\"text-gray-600 dark:text-gray-300 text-sm leading-relaxed\">\n            {truncateText(card.description, 120)}\n          </p>\n        </div>\n\n        {/* Author Info */}\n        {cardAuthor && (\n          <div className=\"mt-4 pt-4 border-t border-gray-200 dark:border-dark-300\">\n            <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n              Créée par{' '}\n              <span className=\"font-medium text-gray-700 dark:text-gray-300\">\n                {formatFullName(cardAuthor.name)}\n              </span>\n            </p>\n          </div>\n        )}\n      </div>\n\n      {/* Contact Info */}\n      <div className=\"px-6 pb-4 space-y-3\">\n        {/* Phone */}\n        <div className=\"flex items-center gap-3 text-sm text-gray-600 dark:text-gray-300\">\n          <Phone size={16} className=\"text-primary-500\" />\n          <span>{card.phone}</span>\n        </div>\n\n        {/* Email */}\n        <div className=\"flex items-center gap-3 text-sm text-gray-600 dark:text-gray-300\">\n          <Mail size={16} className=\"text-primary-500\" />\n          <span className=\"truncate\">{card.email}</span>\n        </div>\n\n        {/* Website */}\n        {card.web && (\n          <div className=\"flex items-center gap-3 text-sm text-gray-600 dark:text-gray-300\">\n            <Globe size={16} className=\"text-primary-500\" />\n            <a\n              href={card.web}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"text-primary-600 dark:text-primary-400 hover:underline truncate\"\n              title={`Visiter ${card.web}`}\n              aria-label={`Visiter le site web ${card.web}`}\n            >\n              {card.web.replace(/^https?:\\/\\//, '')}\n            </a>\n          </div>\n        )}\n\n        {/* Address */}\n        <div className=\"flex items-start gap-3 text-sm text-gray-600 dark:text-gray-300\">\n          <MapPin size={16} className=\"text-primary-500 mt-0.5 flex-shrink-0\" />\n          <span className=\"leading-relaxed\">\n            {card.address.houseNumber} {card.address.street}, {card.address.city} {card.address.zip}, {card.address.country}\n          </span>\n        </div>\n      </div>\n\n      {/* Actions */}\n      {showActions && (\n        <div className=\"px-6 pb-6 flex items-center justify-between\">\n          {/* Like Button */}\n          <div className=\"flex items-center gap-2\">\n            <motion.button\n              whileHover={{ scale: 1.05 }}\n              whileTap={{ scale: 0.95 }}\n              onClick={handleLike}\n              disabled={!user || isLiking}\n              title={isLiked ? 'Retirer le j\\'aime' : 'J\\'aime cette carte'}\n              aria-label={isLiked ? 'Retirer le j\\'aime' : 'J\\'aime cette carte'}\n              className={cn(\n                'flex items-center gap-1.5 px-3 py-1.5 rounded-lg text-sm font-medium transition-all duration-200',\n                isLiked\n                  ? 'bg-red-100 dark:bg-red-900/30 text-red-600 dark:text-red-400 hover:bg-red-200 dark:hover:bg-red-900/50'\n                  : 'bg-gray-100 dark:bg-dark-200 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-dark-300',\n                !user && 'opacity-50 cursor-not-allowed'\n              )}\n            >\n              <Heart\n                size={16}\n                className={cn(\n                  'transition-colors duration-200',\n                  isLiked ? 'fill-current' : ''\n                )}\n              />\n              <span>{likesCount}</span>\n            </motion.button>\n          </div>\n\n          {/* Edit/Delete Actions */}\n          {canEdit && (\n            <div className=\"flex items-center gap-2\">\n              <Button\n                size=\"sm\"\n                variant=\"ghost\"\n                onClick={handleEdit}\n                leftIcon={<Edit size={16} />}\n              >\n                Modifier\n              </Button>\n              \n              <Button\n                size=\"sm\"\n                variant=\"ghost\"\n                onClick={handleDelete}\n                leftIcon={<Trash2 size={16} />}\n                className=\"text-red-600 hover:text-red-700 hover:bg-red-50 dark:text-red-400 dark:hover:text-red-300 dark:hover:bg-red-900/20\"\n              >\n                Supprimer\n              </Button>\n            </div>\n          )}\n\n          {/* External Link */}\n          {card.web && (\n            <a\n              href={card.web}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              title={`Visiter ${card.web}`}\n              aria-label={`Visiter le site web ${card.web}`}\n              className=\"flex items-center gap-1 px-3 py-1.5 text-sm font-medium text-primary-600 dark:text-primary-400 hover:text-primary-700 dark:hover:text-primary-300 transition-colors\"\n            >\n              <ExternalLink size={16} />\n              <span>Visiter</span>\n            </a>\n          )}\n        </div>\n      )}\n\n      {/* Hover Glow Effect */}\n      <div className=\"absolute inset-0 rounded-2xl bg-gradient-to-r from-primary-500/20 via-purple-500/20 to-pink-500/20 opacity-0 group-hover:opacity-100 transition-opacity duration-500 pointer-events-none blur-xl\" />\n    </motion.div>\n  );\n}\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/Users/shayacoca/PROCARDS/frontend/src/components/ui/Input.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/Users/shayacoca/PROCARDS/frontend/src/components/ui/LoadingSpinner.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/Users/shayacoca/PROCARDS/frontend/src/contexts/AuthContext.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/Users/shayacoca/PROCARDS/frontend/src/contexts/ThemeContext.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/Users/shayacoca/PROCARDS/frontend/src/env.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/Users/shayacoca/PROCARDS/frontend/src/lib/utils.ts","messages":[],"suppressedMessages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":63,"column":46,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":63,"endColumn":49,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[2068,2071],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[2068,2071],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":63,"column":56,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":63,"endColumn":59,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[2078,2081],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[2078,2081],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/Users/shayacoca/PROCARDS/frontend/src/main.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/Users/shayacoca/PROCARDS/frontend/src/pages/AdminPage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/Users/shayacoca/PROCARDS/frontend/src/pages/CardsPage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/Users/shayacoca/PROCARDS/frontend/src/pages/CreateCardPage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/Users/shayacoca/PROCARDS/frontend/src/pages/EditCardPage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/Users/shayacoca/PROCARDS/frontend/src/pages/HomePage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/Users/shayacoca/PROCARDS/frontend/src/pages/LoginPage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/Users/shayacoca/PROCARDS/frontend/src/pages/MyCardsPage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/Users/shayacoca/PROCARDS/frontend/src/pages/ProfilePage.tsx","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":261,"column":30,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":261,"endColumn":33,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[9242,9245],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[9242,9245],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":267,"column":31,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":267,"endColumn":34,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[9638,9641],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[9638,9641],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":277,"column":31,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":277,"endColumn":34,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[10263,10266],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[10263,10266],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { \n  User, \n  Mail, \n  Phone, \n  MapPin, \n  Eye, \n  EyeOff, \n  Save, \n  X, \n  Check,\n  Shield,\n  CreditCard,\n  Edit3,\n  Settings\n} from 'lucide-react';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { userService } from '@/services/api';\nimport Button from '@/components/ui/Button';\nimport Input from '@/components/ui/Input';\nimport LoadingSpinner from '@/components/ui/LoadingSpinner';\nimport { PageProps } from '@/types';\nimport { getErrorMessage } from '@/lib/utils';\nimport toast from 'react-hot-toast';\n\n// Schema de validation pour le profil\nconst profileSchema = z.object({\n  firstName: z\n    .string()\n    .min(1, 'Le prénom est requis')\n    .min(2, 'Le prénom doit contenir au moins 2 caractères'),\n  middleName: z.string().optional(),\n  lastName: z\n    .string()\n    .min(1, 'Le nom est requis')\n    .min(2, 'Le nom doit contenir au moins 2 caractères'),\n  phone: z\n    .string()\n    .min(1, 'Le téléphone est requis')\n    .regex(/^[\\d\\s+\\-()]+$/, 'Format de téléphone invalide'),\n  email: z\n    .string()\n    .min(1, 'L\\'email est requis')\n    .email('Format d\\'email invalide'),\n  country: z.string().min(1, 'Le pays est requis'),\n  state: z.string().optional(),\n  city: z.string().min(1, 'La ville est requise'),\n  street: z.string().min(1, 'L\\'adresse est requise'),\n  houseNumber: z.string().min(1, 'Le numéro est requis'),\n  zip: z.string().min(1, 'Le code postal est requis'),\n});\n\n// Schema pour changer le mot de passe\nconst passwordSchema = z.object({\n  currentPassword: z.string().min(1, 'Le mot de passe actuel est requis'),\n  newPassword: z\n    .string()\n    .min(1, 'Le nouveau mot de passe est requis')\n    .min(7, 'Le mot de passe doit contenir au moins 7 caractères')\n    .regex(/(?=.*[a-z])/, 'Au moins une minuscule requise')\n    .regex(/(?=.*[A-Z])/, 'Au moins une majuscule requise')\n    .regex(/(?=.*\\d)/, 'Au moins un chiffre requis')\n    .regex(/(?=.*[!@#$%^&*])/, 'Au moins un caractère spécial requis'),\n  confirmPassword: z.string().min(1, 'Veuillez confirmer le mot de passe'),\n}).refine((data) => data.newPassword === data.confirmPassword, {\n  message: 'Les mots de passe ne correspondent pas',\n  path: ['confirmPassword'],\n});\n\ntype ProfileFormData = z.infer<typeof profileSchema>;\ntype PasswordFormData = z.infer<typeof passwordSchema>;\n\nexport default function ProfilePage({ className }: PageProps = {}) {\n  const { user, updateUser } = useAuth();\n  const [isEditing, setIsEditing] = useState(false);\n  const [isChangingPassword, setIsChangingPassword] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n  const [showCurrentPassword, setShowCurrentPassword] = useState(false);\n  const [showNewPassword, setShowNewPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n\n  const {\n    register: registerProfile,\n    handleSubmit: handleProfileSubmit,\n    formState: { errors: profileErrors },\n    setValue,\n    reset: resetProfile,\n  } = useForm<ProfileFormData>({\n    resolver: zodResolver(profileSchema),\n  });\n\n  const {\n    register: registerPassword,\n    handleSubmit: handlePasswordSubmit,\n    formState: { errors: passwordErrors },\n    reset: resetPassword,\n    watch,\n  } = useForm<PasswordFormData>({\n    resolver: zodResolver(passwordSchema),\n  });\n\n  const watchedPassword = watch();\n\n  // Charger les données utilisateur\n  useEffect(() => {\n    if (user) {\n      setValue('firstName', user.name.first);\n      setValue('middleName', user.name.middle || '');\n      setValue('lastName', user.name.last);\n      setValue('phone', user.phone);\n      setValue('email', user.email);\n      setValue('country', user.address.country);\n      setValue('state', user.address.state || '');\n      setValue('city', user.address.city);\n      setValue('street', user.address.street);\n      setValue('houseNumber', String(user.address.houseNumber));\n      setValue('zip', String(user.address.zip));\n    }\n  }, [user, setValue]);\n\n  const onProfileSubmit = async (data: ProfileFormData) => {\n    if (!user) return;\n\n    try {\n      setIsSaving(true);\n      const updatedData = {\n        name: {\n          first: data.firstName,\n          middle: data.middleName || '',\n          last: data.lastName,\n        },\n        phone: data.phone,\n        email: data.email,\n        address: {\n          country: data.country,\n          state: data.state || '',\n          city: data.city,\n          street: data.street,\n          houseNumber: parseInt(data.houseNumber),\n          zip: parseInt(data.zip),\n        },\n      };\n\n      const updatedUser = await userService.updateProfile(updatedData);\n      await updateUser(updatedUser);\n      toast.success('Profil mis à jour avec succès !');\n      setIsEditing(false);\n    } catch (error) {\n      toast.error(getErrorMessage(error));\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  const onPasswordSubmit = async (data: PasswordFormData) => {\n    try {\n      setIsSaving(true);\n      await userService.changePassword({\n        currentPassword: data.currentPassword,\n        newPassword: data.newPassword,\n      });\n      toast.success('Mot de passe changé avec succès !');\n      setIsChangingPassword(false);\n      resetPassword();\n    } catch (error) {\n      toast.error(getErrorMessage(error));\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  const cancelEdit = () => {\n    setIsEditing(false);\n    if (user) {\n      resetProfile({\n        firstName: user.name.first,\n        middleName: user.name.middle || '',\n        lastName: user.name.last,\n        phone: user.phone,\n        email: user.email,\n        country: user.address.country,\n        state: user.address.state || '',\n        city: user.address.city,\n        street: user.address.street,\n        houseNumber: String(user.address.houseNumber),\n        zip: String(user.address.zip),\n      });\n    }\n  };\n\n  const cancelPasswordChange = () => {\n    setIsChangingPassword(false);\n    resetPassword();\n  };\n\n  if (!user) {\n    return (\n      <div className={`min-h-screen bg-gradient-to-br from-gray-50 via-white to-blue-50 dark:from-dark-50 dark:via-dark-100 dark:to-dark-200 flex items-center justify-center ${className || ''}`}>\n        <LoadingSpinner size=\"lg\" text=\"Chargement...\" />\n      </div>\n    );\n  }\n\n  return (\n    <div className={`min-h-screen bg-gradient-to-br from-gray-50 via-white to-blue-50 dark:from-dark-50 dark:via-dark-100 dark:to-dark-200 py-8 ${className || ''}`}>\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n        {/* Header */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n          className=\"mb-8 text-center\"\n        >\n          <div className=\"flex items-center justify-center space-x-3 mb-4\">\n            <div className=\"w-16 h-16 bg-gradient-to-r from-primary-500 to-purple-600 rounded-2xl flex items-center justify-center shadow-lg\">\n              <User className=\"w-8 h-8 text-white\" />\n            </div>\n          </div>\n          <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white mb-2\">\n            Mon Profil\n          </h1>\n          <p className=\"text-gray-600 dark:text-gray-300\">\n            Gérez vos informations personnelles et préférences\n          </p>\n        </motion.div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n          {/* Profile Card */}\n          <motion.div\n            initial={{ opacity: 0, x: -20 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.6, delay: 0.2 }}\n            className=\"lg:col-span-1\"\n          >\n            <div className=\"bg-white/80 dark:bg-dark-100/80 backdrop-blur-md rounded-2xl shadow-lg border border-gray-200/50 dark:border-dark-300/50 p-6\">\n              <div className=\"text-center mb-6\">\n                <div className=\"w-20 h-20 bg-gradient-to-r from-primary-500 to-purple-600 rounded-full flex items-center justify-center mx-auto mb-4\">\n                  <User className=\"w-10 h-10 text-white\" />\n                </div>\n                <h3 className=\"text-xl font-bold text-gray-900 dark:text-white\">\n                  {user.name.first} {user.name.middle && user.name.middle + ' '}{user.name.last}\n                </h3>\n                <p className=\"text-gray-600 dark:text-gray-300 flex items-center justify-center space-x-1 mt-1\">\n                  <Mail size={14} />\n                  <span>{user.email}</span>\n                </p>\n              </div>\n\n              {/* Account Type */}\n              <div className=\"space-y-3 mb-6\">\n                <div className=\"flex items-center justify-between p-3 bg-gray-50 dark:bg-dark-200 rounded-lg\">\n                  <div className=\"flex items-center space-x-2\">\n                    <Shield className=\"w-4 h-4 text-gray-500\" />\n                    <span className=\"text-sm text-gray-600 dark:text-gray-300\">Type de compte</span>\n                  </div>\n                  <span className={`text-xs font-medium px-2 py-1 rounded-full ${\n                    (user as any).role === 'admin'\n                      ? 'bg-purple-100 dark:bg-purple-900/30 text-purple-700 dark:text-purple-300'\n                      : user.isBusiness\n                      ? 'bg-blue-100 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300'\n                      : 'bg-gray-100 dark:bg-gray-900/30 text-gray-700 dark:text-gray-300'\n                  }`}>\n                    {(user as any).role === 'admin' ? 'Administrateur' : user.isBusiness ? 'Business' : 'Utilisateur'}\n                  </span>\n                </div>\n\n                <div className=\"flex items-center justify-between p-3 bg-gray-50 dark:bg-dark-200 rounded-lg\">\n                  <div className=\"flex items-center space-x-2\">\n                    <CreditCard className=\"w-4 h-4 text-gray-500\" />\n                    <span className=\"text-sm text-gray-600 dark:text-gray-300\">Cartes créées</span>\n                  </div>\n                  <span className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                    {(user as any).cardsCount || 0}\n                  </span>\n                </div>\n              </div>\n\n              {/* Quick Actions */}\n              <div className=\"space-y-2\">\n                <Button\n                  variant=\"outline\"\n                  fullWidth\n                  leftIcon={<Edit3 />}\n                  onClick={() => setIsEditing(!isEditing)}\n                  disabled={isSaving}\n                >\n                  {isEditing ? 'Annuler' : 'Modifier Profile'}\n                </Button>\n                <Button\n                  variant=\"outline\"\n                  fullWidth\n                  leftIcon={<Settings />}\n                  onClick={() => setIsChangingPassword(!isChangingPassword)}\n                  disabled={isSaving}\n                >\n                  {isChangingPassword ? 'Annuler' : 'Changer mot de passe'}\n                </Button>\n              </div>\n            </div>\n          </motion.div>\n\n          {/* Main Content */}\n          <motion.div\n            initial={{ opacity: 0, x: 20 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.6, delay: 0.4 }}\n            className=\"lg:col-span-2 space-y-6\"\n          >\n            {/* Profile Form */}\n            {isEditing && (\n              <div className=\"bg-white/80 dark:bg-dark-100/80 backdrop-blur-md rounded-2xl shadow-lg border border-gray-200/50 dark:border-dark-300/50 p-6\">\n                <div className=\"flex items-center space-x-2 mb-6\">\n                  <Edit3 className=\"w-5 h-5 text-primary-500\" />\n                  <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                    Modifier le Profil\n                  </h3>\n                </div>\n\n                <form onSubmit={handleProfileSubmit(onProfileSubmit)} className=\"space-y-6\">\n                  {/* Personal Information */}\n                  <div>\n                    <h4 className=\"text-md font-medium text-gray-900 dark:text-white mb-4\">\n                      Informations personnelles\n                    </h4>\n                    <div className=\"space-y-4\">\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                        <Input\n                          {...registerProfile('firstName')}\n                          label=\"Prénom *\"\n                          placeholder=\"Jean\"\n                          error={profileErrors.firstName?.message}\n                          disabled={isSaving}\n                        />\n                        <Input\n                          {...registerProfile('lastName')}\n                          label=\"Nom *\"\n                          placeholder=\"Dupont\"\n                          error={profileErrors.lastName?.message}\n                          disabled={isSaving}\n                        />\n                      </div>\n\n                      <Input\n                        {...registerProfile('middleName')}\n                        label=\"Deuxième prénom\"\n                        placeholder=\"Marie (optionnel)\"\n                        disabled={isSaving}\n                      />\n\n                      <Input\n                        {...registerProfile('email')}\n                        type=\"email\"\n                        label=\"Email *\"\n                        placeholder=\"jean.dupont@example.com\"\n                        leftIcon={<Mail size={20} />}\n                        error={profileErrors.email?.message}\n                        disabled={isSaving}\n                      />\n\n                      <Input\n                        {...registerProfile('phone')}\n                        type=\"tel\"\n                        label=\"Téléphone *\"\n                        placeholder=\"+33 1 23 45 67 89\"\n                        leftIcon={<Phone size={20} />}\n                        error={profileErrors.phone?.message}\n                        disabled={isSaving}\n                      />\n                    </div>\n                  </div>\n\n                  {/* Address */}\n                  <div>\n                    <h4 className=\"text-md font-medium text-gray-900 dark:text-white mb-4\">\n                      Adresse\n                    </h4>\n                    <div className=\"space-y-4\">\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                        <Input\n                          {...registerProfile('country')}\n                          label=\"Pays *\"\n                          placeholder=\"France\"\n                          leftIcon={<MapPin size={20} />}\n                          error={profileErrors.country?.message}\n                          disabled={isSaving}\n                        />\n                        <Input\n                          {...registerProfile('state')}\n                          label=\"Région\"\n                          placeholder=\"Île-de-France\"\n                          error={profileErrors.state?.message}\n                          disabled={isSaving}\n                        />\n                      </div>\n\n                      <Input\n                        {...registerProfile('city')}\n                        label=\"Ville *\"\n                        placeholder=\"Paris\"\n                        error={profileErrors.city?.message}\n                        disabled={isSaving}\n                      />\n\n                      <div className=\"grid grid-cols-3 gap-4\">\n                        <div className=\"col-span-2\">\n                          <Input\n                            {...registerProfile('street')}\n                            label=\"Rue *\"\n                            placeholder=\"Avenue des Champs-Élysées\"\n                            error={profileErrors.street?.message}\n                            disabled={isSaving}\n                          />\n                        </div>\n                        <Input\n                          {...registerProfile('houseNumber')}\n                          label=\"Numéro *\"\n                          placeholder=\"123\"\n                          error={profileErrors.houseNumber?.message}\n                          disabled={isSaving}\n                        />\n                      </div>\n\n                      <Input\n                        {...registerProfile('zip')}\n                        label=\"Code postal *\"\n                        placeholder=\"75008\"\n                        error={profileErrors.zip?.message}\n                        disabled={isSaving}\n                      />\n                    </div>\n                  </div>\n\n                  {/* Actions */}\n                  <div className=\"flex space-x-4\">\n                    <Button\n                      type=\"submit\"\n                      isLoading={isSaving}\n                      disabled={isSaving}\n                      leftIcon={!isSaving ? <Save /> : undefined}\n                      className=\"flex-1\"\n                    >\n                      {isSaving ? 'Sauvegarde...' : 'Sauvegarder'}\n                    </Button>\n                    <Button\n                      type=\"button\"\n                      variant=\"outline\"\n                      onClick={cancelEdit}\n                      disabled={isSaving}\n                      leftIcon={<X />}\n                      className=\"flex-1\"\n                    >\n                      Annuler\n                    </Button>\n                  </div>\n                </form>\n              </div>\n            )}\n\n            {/* Password Change Form */}\n            {isChangingPassword && (\n              <div className=\"bg-white/80 dark:bg-dark-100/80 backdrop-blur-md rounded-2xl shadow-lg border border-gray-200/50 dark:border-dark-300/50 p-6\">\n                <div className=\"flex items-center space-x-2 mb-6\">\n                  <Settings className=\"w-5 h-5 text-primary-500\" />\n                  <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                    Changer le Mot de Passe\n                  </h3>\n                </div>\n\n                <form onSubmit={handlePasswordSubmit(onPasswordSubmit)} className=\"space-y-6\">\n                  <div className=\"relative\">\n                    <Input\n                      {...registerPassword('currentPassword')}\n                      type={showCurrentPassword ? 'text' : 'password'}\n                      label=\"Mot de passe actuel *\"\n                      placeholder=\"••••••••\"\n                      error={passwordErrors.currentPassword?.message}\n                      disabled={isSaving}\n                    />\n                    <button\n                      type=\"button\"\n                      onClick={() => setShowCurrentPassword(!showCurrentPassword)}\n                      className=\"absolute right-3 top-[2.7rem] text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors\"\n                      disabled={isSaving}\n                      title={showCurrentPassword ? 'Masquer le mot de passe' : 'Afficher le mot de passe'}\n                      aria-label={showCurrentPassword ? 'Masquer le mot de passe' : 'Afficher le mot de passe'}\n                    >\n                      {showCurrentPassword ? <EyeOff size={20} /> : <Eye size={20} />}\n                    </button>\n                  </div>\n\n                  <div className=\"relative\">\n                    <Input\n                      {...registerPassword('newPassword')}\n                      type={showNewPassword ? 'text' : 'password'}\n                      label=\"Nouveau mot de passe *\"\n                      placeholder=\"••••••••\"\n                      error={passwordErrors.newPassword?.message}\n                      disabled={isSaving}\n                    />\n                    <button\n                      type=\"button\"\n                      onClick={() => setShowNewPassword(!showNewPassword)}\n                      className=\"absolute right-3 top-[2.7rem] text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors\"\n                      disabled={isSaving}\n                      title={showNewPassword ? 'Masquer le nouveau mot de passe' : 'Afficher le nouveau mot de passe'}\n                      aria-label={showNewPassword ? 'Masquer le nouveau mot de passe' : 'Afficher le nouveau mot de passe'}\n                    >\n                      {showNewPassword ? <EyeOff size={20} /> : <Eye size={20} />}\n                    </button>\n                  </div>\n\n                  <div className=\"relative\">\n                    <Input\n                      {...registerPassword('confirmPassword')}\n                      type={showConfirmPassword ? 'text' : 'password'}\n                      label=\"Confirmer le nouveau mot de passe *\"\n                      placeholder=\"••••••••\"\n                      error={passwordErrors.confirmPassword?.message}\n                      disabled={isSaving}\n                    />\n                    <button\n                      type=\"button\"\n                      onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                      className=\"absolute right-3 top-[2.7rem] text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors\"\n                      disabled={isSaving}\n                      title={showConfirmPassword ? 'Masquer la confirmation' : 'Afficher la confirmation'}\n                      aria-label={showConfirmPassword ? 'Masquer la confirmation' : 'Afficher la confirmation'}\n                    >\n                      {showConfirmPassword ? <EyeOff size={20} /> : <Eye size={20} />}\n                    </button>\n                  </div>\n\n                  {/* Password Requirements */}\n                  <div className=\"bg-gray-50 dark:bg-dark-200 rounded-lg p-4\">\n                    <h4 className=\"text-sm font-medium text-gray-900 dark:text-white mb-2\">\n                      Exigences du nouveau mot de passe :\n                    </h4>\n                    <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-2 text-xs\">\n                      <div className={`flex items-center space-x-2 ${\n                        watchedPassword.newPassword?.length >= 7 ? 'text-green-600' : 'text-gray-500'\n                      }`}>\n                        <Check size={12} />\n                        <span>Au moins 7 caractères</span>\n                      </div>\n                      <div className={`flex items-center space-x-2 ${\n                        /(?=.*[a-z])/.test(watchedPassword.newPassword || '') ? 'text-green-600' : 'text-gray-500'\n                      }`}>\n                        <Check size={12} />\n                        <span>Une minuscule</span>\n                      </div>\n                      <div className={`flex items-center space-x-2 ${\n                        /(?=.*[A-Z])/.test(watchedPassword.newPassword || '') ? 'text-green-600' : 'text-gray-500'\n                      }`}>\n                        <Check size={12} />\n                        <span>Une majuscule</span>\n                      </div>\n                      <div className={`flex items-center space-x-2 ${\n                        /(?=.*\\d)/.test(watchedPassword.newPassword || '') ? 'text-green-600' : 'text-gray-500'\n                      }`}>\n                        <Check size={12} />\n                        <span>Un chiffre</span>\n                      </div>\n                      <div className={`flex items-center space-x-2 ${\n                        /(?=.*[!@#$%^&*])/.test(watchedPassword.newPassword || '') ? 'text-green-600' : 'text-gray-500'\n                      }`}>\n                        <Check size={12} />\n                        <span>Un caractère spécial</span>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Actions */}\n                  <div className=\"flex space-x-4\">\n                    <Button\n                      type=\"submit\"\n                      isLoading={isSaving}\n                      disabled={isSaving}\n                      leftIcon={!isSaving ? <Save /> : undefined}\n                      className=\"flex-1\"\n                    >\n                      {isSaving ? 'Changement...' : 'Changer le mot de passe'}\n                    </Button>\n                    <Button\n                      type=\"button\"\n                      variant=\"outline\"\n                      onClick={cancelPasswordChange}\n                      disabled={isSaving}\n                      leftIcon={<X />}\n                      className=\"flex-1\"\n                    >\n                      Annuler\n                    </Button>\n                  </div>\n                </form>\n              </div>\n            )}\n\n            {/* Default Information Display */}\n            {!isEditing && !isChangingPassword && (\n              <div className=\"bg-white/80 dark:bg-dark-100/80 backdrop-blur-md rounded-2xl shadow-lg border border-gray-200/50 dark:border-dark-300/50 p-6\">\n                <div className=\"flex items-center space-x-2 mb-6\">\n                  <User className=\"w-5 h-5 text-primary-500\" />\n                  <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                    Informations du Profil\n                  </h3>\n                </div>\n\n                <div className=\"space-y-6\">\n                  {/* Personal Info */}\n                  <div>\n                    <h4 className=\"text-md font-medium text-gray-900 dark:text-white mb-4\">\n                      Informations personnelles\n                    </h4>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-gray-600 dark:text-gray-300\">Prénom:</span>\n                        <span className=\"font-medium text-gray-900 dark:text-white\">{user.name.first}</span>\n                      </div>\n                      {user.name.middle && (\n                        <div className=\"flex justify-between\">\n                          <span className=\"text-gray-600 dark:text-gray-300\">Deuxième prénom:</span>\n                          <span className=\"font-medium text-gray-900 dark:text-white\">{user.name.middle}</span>\n                        </div>\n                      )}\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-gray-600 dark:text-gray-300\">Nom:</span>\n                        <span className=\"font-medium text-gray-900 dark:text-white\">{user.name.last}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-gray-600 dark:text-gray-300\">Email:</span>\n                        <span className=\"font-medium text-gray-900 dark:text-white\">{user.email}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-gray-600 dark:text-gray-300\">Téléphone:</span>\n                        <span className=\"font-medium text-gray-900 dark:text-white\">{user.phone}</span>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Address */}\n                  <div>\n                    <h4 className=\"text-md font-medium text-gray-900 dark:text-white mb-4\">\n                      Adresse\n                    </h4>\n                    <div className=\"text-sm space-y-2\">\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-gray-600 dark:text-gray-300\">Adresse:</span>\n                        <span className=\"font-medium text-gray-900 dark:text-white text-right\">\n                          {user.address.houseNumber} {user.address.street}<br />\n                          {user.address.zip} {user.address.city}<br />\n                          {user.address.state && `${user.address.state}, `}{user.address.country}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n          </motion.div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/Users/shayacoca/PROCARDS/frontend/src/pages/RegisterPage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/Users/shayacoca/PROCARDS/frontend/src/services/api.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/Users/shayacoca/PROCARDS/frontend/src/types/index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/Users/shayacoca/PROCARDS/frontend/tailwind.config.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"/Users/shayacoca/PROCARDS/frontend/vite.config.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]}]
