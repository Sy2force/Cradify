name: 🚀 Cardify CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'
  MONGODB_VERSION: '6.0'

jobs:
  # 🧪 Tests Backend
  backend-tests:
    name: 🔧 Backend Tests
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:6.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: 📦 Install backend dependencies
        working-directory: ./backend
        run: npm ci

      - name: 🔍 Lint backend code
        working-directory: ./backend
        run: npm run lint

      - name: 🧪 Run backend tests
        working-directory: ./backend
        run: npm test
        env:
          NODE_ENV: test
          MONGODB_URI: mongodb://localhost:27017/cardify_test
          JWT_SECRET: test-jwt-secret-key-for-ci-cd-pipeline

      - name: 🛡️ Security audit backend
        working-directory: ./backend
        run: npm audit --audit-level=high

  # 🎨 Tests Frontend
  frontend-tests:
    name: 🎨 Frontend Tests
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: 📦 Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      - name: 🔍 Lint frontend code
        working-directory: ./frontend
        run: npm run lint

      - name: 🧪 Run frontend tests
        working-directory: ./frontend
        run: npm test

      - name: 🏗️ Build frontend
        working-directory: ./frontend
        run: npm run build

      - name: 🛡️ Security audit frontend
        working-directory: ./frontend
        run: npm audit --audit-level=high

      - name: 📊 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist/
          retention-days: 7

  # 🔒 Security Scan
  security-scan:
    name: 🔒 Security Analysis
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔍 Run CodeQL Analysis
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: 🔍 Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

      - name: 🛡️ Run Snyk Security Scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

  # 🚀 Deploy to Staging
  deploy-staging:
    name: 🚀 Deploy to Staging
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests, security-scan]
    if: github.ref == 'refs/heads/develop'
    
    environment:
      name: staging
      url: https://cardify-staging.netlify.app

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: 📦 Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      - name: 🏗️ Build frontend for staging
        working-directory: ./frontend
        run: npm run build
        env:
          VITE_API_URL: ${{ secrets.STAGING_API_URL }}
          VITE_APP_ENV: staging

      - name: 🚀 Deploy to Netlify Staging
        uses: netlify/actions/cli@master
        with:
          args: deploy --dir=frontend/dist --site=${{ secrets.NETLIFY_STAGING_SITE_ID }}
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

      - name: 🚀 Deploy Backend to Render Staging
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.RENDER_STAGING_SERVICE_ID }}
          api-key: ${{ secrets.RENDER_API_KEY }}

  # 🌟 Deploy to Production
  deploy-production:
    name: 🌟 Deploy to Production
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests, security-scan]
    if: github.ref == 'refs/heads/main'
    
    environment:
      name: production
      url: https://cardify.netlify.app

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: 📦 Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      - name: 🏗️ Build frontend for production
        working-directory: ./frontend
        run: npm run build
        env:
          VITE_API_URL: ${{ secrets.PRODUCTION_API_URL }}
          VITE_APP_ENV: production

      - name: 🚀 Deploy to Netlify Production
        uses: netlify/actions/cli@master
        with:
          args: deploy --prod --dir=frontend/dist --site=${{ secrets.NETLIFY_SITE_ID }}
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

      - name: 🚀 Deploy Backend to Render Production
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.RENDER_SERVICE_ID }}
          api-key: ${{ secrets.RENDER_API_KEY }}

      - name: 🏷️ Create Release Tag
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
          body: |
            🚀 **Nouvelle version de Cardify déployée en production**
            
            ## 📋 Changements inclus
            ${{ github.event.head_commit.message }}
            
            ## 🔗 Liens utiles
            - 🌐 [Application](https://cardify.netlify.app)
            - 📚 [Documentation](https://github.com/Sy2force/Cardifyy#readme)
            - 🐛 [Signaler un bug](https://github.com/Sy2force/Cardifyy/issues)
            
            ## 🧪 Tests
            - ✅ Tests backend: Passés
            - ✅ Tests frontend: Passés  
            - ✅ Audit sécurité: Validé
            - ✅ Build production: Réussi
          draft: false
          prerelease: false

  # 📊 Performance Tests
  performance-tests:
    name: 📊 Performance Tests
    runs-on: ubuntu-latest
    needs: [deploy-production]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: 📦 Install Lighthouse CI
        run: npm install -g @lhci/cli@0.12.x

      - name: 🔍 Run Lighthouse CI
        run: lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

  # 📢 Notifications
  notify:
    name: 📢 Notifications
    runs-on: ubuntu-latest
    needs: [deploy-production, performance-tests]
    if: always()

    steps:
      - name: 📧 Send Success Notification
        if: needs.deploy-production.result == 'success'
        uses: 8398a7/action-slack@v3
        with:
          status: success
          text: |
            🎉 **Déploiement Cardify réussi!**
            
            ✅ Version: v${{ github.run_number }}
            🚀 Branche: ${{ github.ref_name }}
            👤 Auteur: ${{ github.actor }}
            
            🔗 [Voir l'application](https://cardify.netlify.app)
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: ❌ Send Failure Notification
        if: needs.deploy-production.result == 'failure'
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          text: |
            ❌ **Échec du déploiement Cardify**
            
            🔴 Version: v${{ github.run_number }}
            🚀 Branche: ${{ github.ref_name }}
            👤 Auteur: ${{ github.actor }}
            
            🔗 [Voir les logs](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
